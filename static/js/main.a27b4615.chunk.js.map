{"version":3,"sources":["components/calculator/Calculator.js","components/calculator/Calculotor.style.js","components/buttons/ButtonsList.styles.js","components/buttons/ButtonsList.js","components/display/Display.style.js","components/display/Display.js","GlobalStyle.js","App.js","index.js"],"names":["Calculator","useState","display","setDisplay","formula","setFormula","lastPressed","useRef","endsWithOperator","handleInput","value","type","current","console","log","condition","test","slice","includes","result","eval","toString","buttons","id","Warapper","styled","div","Grid","Button","button","ButtonsList","map","onClick","Container","Value","p","Result","Display","GlobalStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a27b4615.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ButtonsList from '../buttons/ButtonsList';\r\nimport Display from '../display/Display';\r\nimport { Warapper } from './Calculotor.style';\r\n\r\n\r\nconst Calculator = () => {\r\n    \r\n    const [display, setDisplay] = useState('0');\r\n    const [formula, setFormula] = useState('');\r\n    const lastPressed = useRef('');\r\n    const endsWithOperator = /[-+*/]$/;\r\n\r\n    const handleInput = (value, type) => {\r\n        //Clear and Initita the states \r\n        if (type === 'clear') {\r\n            setDisplay('0');\r\n            setFormula('');\r\n        } \r\n        //to prevent multipule zeros at the starts\r\n        else if (formula === \"0\") {\r\n            if (value===\"0\"){ return;}\r\n            else {\r\n                setFormula(value)\r\n            }\r\n            \r\n        }\r\n        //in case, 2 or more operators are entered consecutively\r\n        else if (type === 'opertor' && lastPressed.current==='opertor') {\r\n            //exclude the minus from the rule\r\n            if (value === \"-\") {\r\n                console.log(-1)\r\n                setDisplay(value);\r\n                setFormula(formula+value);\r\n            //for the other opertors\r\n            } else {\r\n                let condition = formula;\r\n                while (endsWithOperator.test(condition)){\r\n                    condition = condition.slice(0,-1)\r\n                    console.log(endsWithOperator.test(condition))\r\n                    console.log(condition)\r\n                }\r\n                setDisplay(value)\r\n                setFormula(condition+value)\r\n             \r\n            }\r\n        }\r\n        //prevent more than one decimal point\r\n        else if (type === 'decimal' && display.includes(\".\")) {\r\n            return;\r\n        }\r\n        //evalute the result\r\n        else if (type === \"equal\") {\r\n            let result = eval(formula).toString();\r\n            setDisplay(result);\r\n            setFormula(result);\r\n            lastPressed.current = type\r\n        }\r\n        //start a new calculation that operates on the result of the previous evaluation\r\n        else if (lastPressed.current ===\"equal\" && type === \"opertor\") {\r\n            setDisplay(display);\r\n            setFormula(display+value)\r\n        }\r\n        else if (type===\"number\" || type===\"decimal\") {\r\n            if (lastPressed.current === \"opertor\" || display === \"0\") {\r\n                setDisplay(value);\r\n                setFormula(formula+value);\r\n                lastPressed.current = type\r\n            } else {\r\n                setDisplay(display+value);\r\n                setFormula(formula+value);\r\n                lastPressed.current = type\r\n            }\r\n        }\r\n        //display values and the formula\r\n        else  {\r\n            setDisplay(value);\r\n            setFormula(formula+value);\r\n            lastPressed.current = type\r\n        }\r\n        \r\n    };\r\n\r\n\r\n\r\n    return ( \r\n        <Warapper >\r\n            <Display display={display} formula={formula} />\r\n            <ButtonsList buttons={buttons} handleInput={handleInput}/>\r\n        </Warapper>      \r\n     );\r\n}\r\n\r\n//Array of buttons\r\n\r\nconst buttons=[\r\n    {\r\n     value: \"0\",\r\n     id: \"zero\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"1\",\r\n     id: \"one\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"2\",\r\n     id:\"two\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"3\",\r\n     id:\"three\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"4\",\r\n     id:\"four\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"5\",\r\n     id:\"five\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"6\", \r\n     id:\"six\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"7\",\r\n     id:\"seven\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"8\", \r\n     id:\"eight\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"9\",\r\n     id:\"nine\",\r\n     type: \"number\"\r\n    },\r\n    {\r\n     value: \"+\",\r\n     id: \"add\",\r\n     type: \"opertor\"\r\n    },\r\n    {\r\n     value:\"-\",\r\n     id:\"subtract\",\r\n     type: \"opertor\"\r\n    },\r\n    {\r\n     value:\"*\",\r\n     id:\"multiply\",\r\n     type: \"opertor\"\r\n    },\r\n    {\r\n     value:\"/\",\r\n     id:\"divide\",\r\n     type: \"opertor\"\r\n    },\r\n    {\r\n     value:\"=\",\r\n     id:\"equals\",\r\n     type:\"equal\"\r\n    },\r\n    {\r\n     value:\".\",\r\n     id:'decimal',\r\n     type:\"decimal\"\r\n    },\r\n    {\r\n     value:\"AC\",\r\n     id:\"clear\",\r\n     type: \"clear\"\r\n    }\r\n\r\n];\r\n\r\n\r\nexport default Calculator;","import styled from \"styled-components\";\r\n\r\nexport const Warapper = styled.div`\r\nmax-width: 50%;\r\nmargin: O auto;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.div``;\r\n\r\nexport const Button = styled.button``;\r\n\r\n","import React from 'react';\r\nimport { Button, Grid } from './ButtonsList.styles';\r\n\r\nconst ButtonsList = ({buttons, handleInput}) => {\r\n    return ( \r\n        <Grid>\r\n            {buttons.map(button => (\r\n                <Button \r\n                    key={button.id} \r\n                    id={button.id}\r\n                    onClick = {() =>  handleInput(button.value, button.type)}\r\n                    \r\n                >{button.value}</Button>\r\n            ))}\r\n        </Grid>\r\n     );\r\n}\r\n \r\nexport default ButtonsList;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div``;\r\n\r\nexport const Value = styled.p``;\r\n\r\nexport const Result = styled.p``","import React from 'react';\r\nimport { Container, Result, Value } from './Display.style';\r\n const Display = ({display, formula}) => {\r\n     return ( \r\n         <Container >\r\n            <Result >{formula}</Result>\r\n             <Value id=\"display\">{display}</Value>\r\n         </Container>\r\n      );\r\n }\r\n  \r\n export default Display;","import styled from \"styled-components\";\r\n\r\nexport const GlobalStyle = styled.div`\r\n * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    width:100%;\r\n    min-height: 100vh;\r\n    background-color: aqua;\r\n}\r\n`","import Calculator from \"./components/calculator/Calculator\";\nimport { GlobalStyle } from \"./GlobalStyle\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <GlobalStyle />\n    <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}